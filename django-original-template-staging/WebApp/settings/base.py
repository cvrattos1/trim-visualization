"""
Django settings for WebApp project.

Generated by 'django-admin startproject' using Django 1.8.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import logging
import logging.config

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

FORMAT = '%(asctime)-15s %(levelname)s %(module)s %(process)s %(thread)s %(message)s'
logging.basicConfig(filename='/logs/error.log', format=FORMAT,
                    datefmt='%m/%d/%Y %I:%M:%S %p', filemode='w')

# https://docs.djangoproject.com/en/3.0/ref/settings/#allowed-hosts
ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django_filters',
    'rest_framework',
    'import_export',
    'sass_processor',
    'WebApp.template_app',
    'WebApp.template_app.web',
    'WebApp.template_app.api.v1',
)

MIDDLEWARE = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

# https://docs.djangoproject.com/en/3.0/topics/http/urls/#how-django-processes-a-request
ROOT_URLCONF = 'WebApp.template_app.urls'

# https://docs.djangoproject.com/en/3.0/topics/templates/#configuration
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.abspath(os.path.dirname(__name__)),
            os.path.join(os.path.abspath(os.path.dirname(__name__)), '/web/')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# https://docs.djangoproject.com/en/3.0/howto/deployment/wsgi/#the-application-object
WSGI_APPLICATION = 'WebApp.wsgi.application'

REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend']
}

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.environ['MYSQL_DATABASE'],
        'USER': os.environ['MYSQL_USER'],
        'PASSWORD': os.environ['MYSQL_ROOT_PASSWORD'],
        'HOST': os.environ['MYSQL_CONTAINER_NAME'],
        'PORT': os.environ['MYSQL_PORT']
    }
}
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/
# Deployment environment
DEPLOY_ENV = os.environ['DEPLOY_ENV']

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['DJANGO_SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ['DJANGO_DEBUG']

# SECURITY WARNING: set to True for security
# https://docs.djangoproject.com/en/3.0/ref/settings/#session-cookie-secure
SESSION_COOKIE_SECURE = True

# SECURITY WARNING: set to True for security
# https://docs.djangoproject.com/en/3.0/ref/settings/#csrf-cookie-secure
# When using 'django.middleware.csrf.CsrfViewMiddleware' in your MIDDLEWARE,
#     CSRF_COOKIE_SECURE should be set to True
CSRF_COOKIE_SECURE = True

# SECURITY WARNING: set to same-origin for security
# To gain most of the benefits of disabling Referer headers while also keeping
#   CSRF protection, consider enabling only same-origin referrers.
# https://docs.djangoproject.com/en/3.0/ref/settings/#std:setting-SECURE_REFERRER_POLICY
SECURE_REFERRER_POLICY = 'same-origin'


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
STATIC_URL = os.path.join(BASE_DIR, '/static/')
STATIC_ROOT = os.path.join(BASE_DIR, '/static/')


logger = logging.getLogger(__name__)
logger.warning(STATIC_URL)
logger.warning(STATIC_ROOT)


# https://docs.djangoproject.com/en/3.0/topics/logging/
LOGGING_CONFIG = None
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': '/logs/warning.log',
        },
        'file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': '/logs/error.log',
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['file'],
            'level': 'WARNING',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}
logging.config.dictConfig(LOGGING)
